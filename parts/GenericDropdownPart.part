{"typeName":"Part","id":"826d109a-1bbb-d4f4-e163-3e2caea5d1b2","name":"GenericDropdownPart.part","path":"/parts/GenericDropdownPart.part","lastModified":"2018-09-21T23:10:20.885Z","data":{"htmlText":"<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/choices.js@4/public/assets/styles/base.min.css\">\n<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/choices.js@4/public/assets/styles/choices.min.css\">\n<script src=\"https://cdn.jsdelivr.net/npm/choices.js@4/public/assets/scripts/choices.min.js\"></script>\n\n<select multiple id=\"myChoices\" placeholder=\"Select Available Options\"></select>\n<style>\nbody {\n    color: black;\n    padding: 10px;\n}\n.choices__list--dropdown .choices__list {\n    max-height: calc(100vh - 60px);\n}\n</style>","cssText":"","jsText":"let myChoices;\nthis.render = function(args) {\n    let available = args[0];\n    let selected = args[1];\n    if (available == null) {\n        return;\n    }\n    if (selected == null) {\n        selected = [];\n    }\n\n    let availableChoices = available.map((a, i) => {\n        return {\n            value: a.toString(), \n            label: a.toString(),\n            selected: selected.includes(a.toString())\n        };\n    });\n    myChoices.clearStore();\n    myChoices.setChoices(availableChoices, 'value', 'label', true);\n}\nthis.initialize = function() {\n    let element = document.getElementById('myChoices');\n\n    myChoices = new Choices(element, {\n      removeItemButton: true,\n      position: \"bottom\"\n    });\n    \n    element.addEventListener('change', function(event) {\n        this.context.set(\"Selected\", myChoices.getValue(true));\n    }.bind(this));\n    \n    return Promise.resolve();\n}"},"functionType":"UserDefinedEvalPart","arguments":[{"typeAnnotation":"Any","name":"Available","metadata":null,"defaultValue":null},{"typeAnnotation":"Any","name":"Selected","metadata":null,"defaultValue":null}],"returnType":"Any"}