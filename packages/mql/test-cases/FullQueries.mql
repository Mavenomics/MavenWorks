SELECT Manufacturer, Ref, Year, SizeMB, Cost from HDPrices where Cost<1000 group by Manufacturer, Ref with rollup having Cost < 900
SELECT Manufacturer, Ref, Year as MYYEAR, SizeMB, Cost FROM HDPrices WHERE ( Cost < 1000 ) GROUP BY Manufacturer, Ref
SELECT description, FTE, ( FTE * FTE ) FROM Securities
SELECT avg( ( latestprice * ( shares_outstanding / FTE ) ) ) as CapPerEmployee, description, latestprice, shares_outstanding, FTE FROM Securities WHERE ( FTE > 100 ) GROUP BY sector, industry
SELECT description, latestprice, shares_outstanding, ( latestprice * ( shares_outstanding / FTE ) ), FTE FROM Securities WHERE ( FTE > 0 )
SELECT description, ( latestprice * ( shares_outstanding / FTE ) ), FTE FROM Securities WHERE ( FTE > 0 )
SELECT avg( ( latestprice * ( shares_outstanding / FTE ) ) ) as CapPerEmployee, description, latestprice, shares_outstanding, FTE FROM Securities WHERE ( FTE > 100 ) GROUP BY sector, CustomRangeBucketer( ( latestprice * ( shares_outstanding / 1000000000 ) ), 0, 10, 'midcap', 10, 100, 'largecap', 100, 1000, 'megacap' )
SELECT sum( ( latestprice * shares_outstanding ) ) as MarketCap, ( 50 - avg( ( FTE / 600 ) ) ) as InverseScaledFTEs FROM Securities WHERE ( FTE > 100 ) GROUP BY sector, industry
SELECT ( sum( ( latestprice * shares_outstanding ) ) / 1000000000 ) as MarketCapbbNS, ( ( avg( ( latestprice * ( shares_outstanding / ( FTE * 10000 ) ) ) ) / 2 ) - 50 ) as IntensityCapPerEmp, avg( ( latestprice * ( shares_outstanding / FTE ) ) ) as CapPerEmp, Vol(  ) FROM SecuritiesWithHistories WHERE ( FTE > 100 ) GROUP BY sector
SELECT count(  ), ( sum( ( latestprice * shares_outstanding ) ) / 1000000000 ) as MarketCapbbNS, ( ( Vol(  ) * 1000 ) - 100 ) as VolScale, avg( ( 500 * ( ( latestprice - AdjClosePriceAt( 250 ) ) / AdjClosePriceAt( 250 ) ) ) ) as YTDScale, ( ( latestprice - AdjClosePriceAt( 1 ) ) / AdjClosePriceAt( 1 ) / 10000 ) as DTDBps, ( ( latestprice - AdjClosePriceAt( 180 ) ) / ( AdjClosePriceAt( 180 ) * 10000 ) ) as YTDBps, ( sum( ( latestprice * shares_outstanding ) ) / 1000000000 ) as MarketCapbbNS, ( ( avg( ( latestprice * ( shares_outstanding / ( FTE * 10000 ) ) ) ) / 2 ) - 50 ) as IntensityCapPerEmp, avg( ( latestprice * ( shares_outstanding / FTE ) ) ) as CapPerEmp, Vol(  ), wavg( Vol(  ), ( latestprice * shares_outstanding ) ) as WAvgVol, max( Vol(  ) ), min( Vol(  ) ), sector, industry, description FROM SecuritiesWithHistories WHERE ( ( FTE > 100 ) and ( sector = 'Technology' ) ) GROUP BY sector, industry
SELECT count(  ), ( sum( ( latestprice * shares_outstanding ) ) / 1000000000 ) as MarketCapbbNS, ( ( Vol(  ) * 1000 ) - 100 ) as VolScale, avg( ( 500 * ( ( latestprice - AdjClosePriceAt( 250 ) ) / AdjClosePriceAt( 250 ) ) ) ) as YTDScale, ( ( latestprice - AdjClosePriceAt( 1 ) ) / AdjClosePriceAt( 1 ) / 10000 ) as DTDBps, ( ( latestprice - AdjClosePriceAt( 180 ) ) / ( AdjClosePriceAt( 180 ) * 10000 ) ) as YTDBps, ( sum( ( latestprice * shares_outstanding ) ) / 1000000000 ) as MarketCapbbNS, ( ( avg( ( latestprice * ( shares_outstanding / ( FTE * 10000 ) ) ) ) / 2 ) - 50 ) as IntensityCapPerEmp, avg( ( latestprice * ( shares_outstanding / FTE ) ) ) as CapPerEmp, Vol(  ), wavg( Vol(  ), ( latestprice * shares_outstanding ) ) as WAvgVol, max( Vol(  ) ), min( Vol(  ) ), sector, industry, description FROM SecuritiesWithHistories WHERE ( FTE > 100 ) GROUP BY sector, industry
SELECT AdjClosePriceHistory(  ), count(  ), ( sum( ( latestprice * shares_outstanding ) ) / 1000000 ) as MarketCapMM, latestprice, AdjClosePriceAt( 20 ), ReturnSince( 20 ) as oneMRet, ReturnSince( 200 ) as oneYRet, avg( ( 500 * ( ( latestprice - AdjClosePriceAt( 250 ) ) / AdjClosePriceAt( 250 ) ) ) ) as YTDScale, ( ( latestprice - AdjClosePriceAt( 1 ) ) / AdjClosePriceAt( 1 ) / 10000 ) as DTDBps, ( ( latestprice - AdjClosePriceAt( 180 ) ) / ( AdjClosePriceAt( 180 ) * 10000 ) ) as YTDBps, ( sum( ( latestprice * shares_outstanding ) ) / 1000000000 ) as MarketCapbbNS, ( ( avg( ( latestprice * ( shares_outstanding / ( FTE * 10000 ) ) ) ) / 2 ) - 50 ) as IntensityCapPerEmp, avg( ( latestprice * ( shares_outstanding / FTE ) ) ) as CapPerEmp, Vol(  ), wavg( Vol(  ), ( latestprice * shares_outstanding ) ) as WAvgVol, max( Vol(  ) ), min( Vol(  ) ), sector, industry, description FROM SecuritiesWithHistories WHERE ( ( FTE > 100 ) and ( sector = 'Technology' ) and ( symbol = 'NIPNY' ) )
SELECT latestprice, AdjClosePriceAt( 250 ), AdjClosePriceHistory(  ) FROM SecuritiesWithHistories WHERE ( ( symbol = 'DST' ) or ( symbol = 'MSFT' ) )
SELECT ((((((((((((((((((((((((((((((((((a)))))))))))))))))))))))))))))))))) from b
set @param = 4 set @f = 4547 + 5 SELECT symbol, sector, industry FROM SecuritiesWithHistories where a not in ('a', 'b')
set @foo = 123 def @add(@a, @b) = @a + @b set @bar = 456 def @constant() = 'constant string' select @add( @foo, @bar ), @constant() from dual
import asdf select a,b from c
import asdf.foo set @foo = bar select 123 from asd()
import asdf.foo import asdf.bar set @foo = bar select 123 from asd()
select a,b,c from asdf preserve grouping group by foo order by bar